// <auto-generated />
using System;
using AlfaPackalApi.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api_PACsServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240403190731_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlfaPackalApi.Modelos.Estudio", b =>
                {
                    b.Property<int>("PACS_EstudioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PACS_EstudioID"));

                    b.Property<string>("AccessionNumber")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("BodyPartExamined")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExposureTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneratedPatientID")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KVP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfFrames")
                        .HasColumnType("int");

                    b.Property<string>("OperatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PACS_PatientID")
                        .HasColumnType("int");

                    b.Property<string>("PerformingPhysicianName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StudyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyInstanceUID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PACS_EstudioID");

                    b.HasIndex("AccessionNumber")
                        .HasDatabaseName("IX_Estudios_AccessionNumber");

                    b.HasIndex("StudyDate")
                        .HasDatabaseName("IX_Estudios_StudyDate");

                    b.HasIndex("PACS_PatientID", "AccessionNumber")
                        .HasDatabaseName("IX_Estudio_PacienteID_AccessionNumber");

                    b.HasIndex("PACS_PatientID", "GeneratedPatientID")
                        .HasDatabaseName("IX_Estudio_PacienteID_GeneratedPatientID");

                    b.HasIndex("PACS_PatientID", "PACS_EstudioID")
                        .HasDatabaseName("IX_Estudio_PacienteID_EstudioID");

                    b.ToTable("Estudios");
                });

            modelBuilder.Entity("AlfaPackalApi.Modelos.Imagen", b =>
                {
                    b.Property<int>("PACS_ImagenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PACS_ImagenID"));

                    b.Property<int>("Columns")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImageNumber")
                        .HasColumnType("int");

                    b.Property<int>("PACS_SerieID")
                        .HasColumnType("int");

                    b.Property<string>("PhotometricInterpretation")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("PixelSpacing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rows")
                        .HasColumnType("int");

                    b.Property<string>("SOPInstanceUID")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("SeriesInstanceUID")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PACS_ImagenID");

                    b.HasIndex("PACS_SerieID", "ImageNumber")
                        .HasDatabaseName("IX_Serie_SerieID_ImageNumber");

                    b.HasIndex("SOPInstanceUID", "ImageNumber")
                        .HasDatabaseName("IX_Serie_SOPInstanceUID_ImageNumber");

                    b.ToTable("Imagenes");
                });

            modelBuilder.Entity("AlfaPackalApi.Modelos.Paciente", b =>
                {
                    b.Property<int>("PACS_PatientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PACS_PatientID"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneratedPatientID")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("IssuerOfPatientID")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PatientAge")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("PatientBirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientID")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PatientSex")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("PatientWeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PACS_PatientID");

                    b.HasIndex("GeneratedPatientID")
                        .HasDatabaseName("IX_Paciente_GeneratedPatientID");

                    b.HasIndex("PatientName")
                        .HasDatabaseName("IX_Paciente_PatientName");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("AlfaPackalApi.Modelos.Serie", b =>
                {
                    b.Property<int>("PACS_SerieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PACS_SerieID"));

                    b.Property<string>("BodyPartExamined")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modality")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int?>("PACS_EstudioID")
                        .HasColumnType("int");

                    b.Property<string>("PatientPosition")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime?>("SeriesDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeriesDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeriesInstanceUID")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("SeriesNumber")
                        .HasColumnType("int");

                    b.Property<string>("StudyInstanceUID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PACS_SerieID");

                    b.HasIndex("SeriesInstanceUID")
                        .HasDatabaseName("IX_Serie_SeriesInstanceUID");

                    b.HasIndex("PACS_EstudioID", "SeriesNumber")
                        .HasDatabaseName("IX_Serie_EstudioID_SeriesNumber");

                    b.HasIndex("SeriesInstanceUID", "SeriesNumber")
                        .HasDatabaseName("IX_Serie_SeriesInstanceUID_SeriesNumber");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("AlfaPackalApi.Modelos.Estudio", b =>
                {
                    b.HasOne("AlfaPackalApi.Modelos.Paciente", "Paciente")
                        .WithMany("Estudios")
                        .HasForeignKey("PACS_PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("AlfaPackalApi.Modelos.Imagen", b =>
                {
                    b.HasOne("AlfaPackalApi.Modelos.Serie", "Serie")
                        .WithMany("Imagenes")
                        .HasForeignKey("PACS_SerieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Serie");
                });

            modelBuilder.Entity("AlfaPackalApi.Modelos.Serie", b =>
                {
                    b.HasOne("AlfaPackalApi.Modelos.Estudio", "Estudio")
                        .WithMany("Series")
                        .HasForeignKey("PACS_EstudioID");

                    b.Navigation("Estudio");
                });

            modelBuilder.Entity("AlfaPackalApi.Modelos.Estudio", b =>
                {
                    b.Navigation("Series");
                });

            modelBuilder.Entity("AlfaPackalApi.Modelos.Paciente", b =>
                {
                    b.Navigation("Estudios");
                });

            modelBuilder.Entity("AlfaPackalApi.Modelos.Serie", b =>
                {
                    b.Navigation("Imagenes");
                });
#pragma warning restore 612, 618
        }
    }
}
